# vim ft=yaml
# CI on Windows via appveyor
# Largely from:
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml

os: Visual Studio 2015

environment:
    global:
      NP_VERSION: v1.10.4
      WHEELHOUSE_UPLOADER_USERNAME: matthew.brett
      WHEELHOUSE_UPLOADER_SECRET:
        secure:
            wSarKWZqmNbc3fTkBlUtt1h4zPxjqy4/Brv0df/guuOsce47ojjISbFph1LMPT0b

    matrix:

#   - PYTHON: "C:\\Python27"
#     PYTHON_VERSION: "2.7.x" # currently 2.7.11
#     PYTHON_ARCH: "32"

#   - PYTHON: "C:\\Python27-x64"
#     PYTHON_VERSION: "2.7.x" # currently 2.7.11
#     PYTHON_ARCH: "64"

#   - PYTHON: "C:\\Python34"
#     PYTHON_VERSION: "3.4.x" # currently 3.4.3
#     PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x" # currently 3.4.3
      PYTHON_ARCH: "64"

#   - PYTHON: "C:\\Python35"
#     PYTHON_VERSION: "3.5.x" # currently 3.5.1
#     PYTHON_ARCH: "32"

#   - PYTHON: "C:\\Python35-x64"
#     PYTHON_VERSION: "3.5.x" # currently 3.5.1
#     PYTHON_ARCH: "64"

install:
  - cmd: echo "Filesystem root:"
  - dir C:\

  - echo "Installed SDKs:"
  - dir "C:/Program Files/Microsoft SDKs/Windows"

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  - pip install -r requirements.txt
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install wheel==0.26
  - git clone https://github.com/numpy/numpy.git

build_script:
  # Fix MSVC builds for 64-bit Python
  # See
  # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"
  # Build and install the wheel
  - cd numpy
  - git checkout %NP_VERSION%
  - python ..\build_numpy.py
  - cd dist
  - pip install --pre --no-index -f . numpy
  - pip install nose

test_script:
  # Run the project tests
  - python -c "import numpy; numpy.test()"
  - cd ..

after_test:
  # If tests are successful, create binary packages for the project.
  - dir dist

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

on_success:
  # Upload the generated wheel package to Rackspace
  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
  # disable the ssl checks.
  - pip install wheelhouse-uploader
  - python -m wheelhouse_uploader upload --no-ssl-check --local-folder=dist win-atlas-wheels
